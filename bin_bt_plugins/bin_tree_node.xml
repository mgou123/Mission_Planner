<?xml version="1.0"?>
<root>
  <TreeNodesModel>
    <!-- ############################### ACTION NODES ################################# -->
    <Action ID="CalcPicAngle">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="pic_identifier">Which pic to go</input_port>
      <!-- <input_port name="center_offset_x">allowed offset to center on x-axis</input_port>
      <input_port name="center_offset_y">allowed offset to center on y-axis</input_port> -->
      <input_port name="ratio">ratio between camera pixel value and real-world coordinate</input_port>
      <output_port name="x_goal">sideways move</output_port>
      <output_port name="y_goal">forward move</output_port>
      <output_port name="yaw_goal">yaw move</output_port>
    </Action>

    <Action ID="ChoosePic">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="gate_side">the side of gate chosen, Gman or Bootlegger</input_port>
      <output_port name="pic_identifier">the pic chosen to throw the ball</output_port>
    </Action>

    <Action ID="SetAdjustment">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="param_x">x unit movement</input_port>
      <input_port name="param_y">y unit movement</input_port>
      <output_port name="x_goal">sideways move</output_port>
      <output_port name="y_goal">forward move</output_port>
    </Action>

    <Action ID="Adder">
      <input_port name="orig_value">value before adding</input_port>
      <input_port name="value_added">value to add</input_port>
      <output_port name="result">calculated result</output_port>
    </Action>

    <Action ID="Multiplier">
      <input_port name="orig_value">value before multiplying</input_port>
      <input_port name="value_mul">value to multiply</input_port>
      <output_port name="result">calculated result</output_port>
    </Action>

    <Action ID="CalcCoverSetpoint">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="ratio">ration between real world distance and number of pixels</input_port>
      <input_port name="lift_ratio_x">relative x ratio of picking point</input_port>
      <input_port name="lift_ratio_y">relative y ratio of picking point</input_port>
      <input_port name="pre_direction">previous direction to throw the cover if this is the second cover, 0 if this is the first cover</input_port>
      <output_port name="drop_pose_1_x">calculated result</output_port>
      <output_port name="drop_pose_1_y">calculated result</output_port>
      <output_port name="drop_pose">relative position to drop cover</output_port>
    </Action>

    <!-- ############################### CONDITION NODES ############################## -->

    <Condition ID="IsLidSeen">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="lid_num">larger than or equal to lid_num of lids are seen</input_port>
    </Condition>

    <Condition ID="IsEnoughPicSeen">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="pic_num">larger than or equal to pic_num of pics are seen</input_port>
    </Condition>

    <Condition ID="IsPicCentered">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="pic_identifier">Which pic to go</input_port>
      <input_port name="center_offset_x">allowed offset to center on x-axis</input_port>
      <input_port name="center_offset_y">allowed offset to center on y-axis</input_port>
    </Condition>

    <Condition ID="IsCenterAligned">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="pic_identifier">Which pic to go</input_port>
      <input_port name="center_offset_x">allowed offset to center on x-axis</input_port>
      <input_port name="center_offset_y">allowed offset to center on y-axis</input_port>
      <input_port name="x_ratio">target relative ratio of x</input_port>
      <input_port name="y_ratio">target relative ratio of y</input_port>
    </Condition>

    <Condition ID="IsAreaEnough">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="pic_identifier">Which pic to go</input_port>
      <input_port name="area">area benchmark</input_port>
    </Condition>

    <Condition ID="IsHandleFlat">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="flat_ratio">ratio between height and width of bounding box of handle that can be considered flat</input_port>
    </Condition>

    <Condition ID="IsFullBinSeen">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="area_benchmark">area benchmark that can be considered fully seen bin</input_port>
    </Condition>

    <Condition ID="IsPartBinSeen">
      <input_port name="vision_objects">Detected Objects</input_port>
      <input_port name="area_benchmark">area benchmark that can be considered fully seen bin</input_port>
    </Condition>


    <!-- ############################### CONTROL NODES ################################ -->

    <!-- ############################### DECORATOR NODES ############################## -->

  </TreeNodesModel>
</root>