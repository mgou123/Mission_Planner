<root main_tree_to_execute = "TorpedoTaskTree">
  <include ros_pkg="bt_mission_planner" path="behavior_trees/side_sweep.xml"/>
  <BehaviorTree ID="TorpedoTaskTree">
    <Sequence>
      <SetBlackboard output_key="vision_main_target" value="bootlegger"/>
      <SetBlackboard output_key="vision_target" value="Bootlegger Big Hole"/>
      <DetectorAUVService service_name="{vision_service_name}" objects="bootlegger" enable="true"/>

      <UpdatePose topic_name="{pose_topic_name}" result="{odom_pose}" depth="{standard_depth}"/>
      <ConvertOdomToPose odom_pose="{odom_pose}" pose="{pose}" />
      <SplitPoseComponents pose="{pose}" yaw="{temp_yaw}" />

      <!-- Find vision_main_target -->
      <Delay delay_msec="3000">
        <ReactiveFallback>
          <Sequence>
            <UpdateDetectedObjects topic_name="{vision_topic_name}" objects="{detected_objects}" timeout_sec="10.0" />
            <SetObjectGoal vision_objects="{detected_objects}" target_identity="{vision_main_target}" goal="{goal}" absolute_depth="{object_depth}" absolute_yaw="{object_yaw}" />
          </Sequence>
          <SubTree ID="SideSweepTree" node="node" server_name="server_name" original_yaw="{object_yaw}" depth="standard_depth" />
        </ReactiveFallback>
      </Delay>

      <!-- Rough align Yaw -->
      <NavigateToPose server_name="{server_name}" goal="0;0;0;0" yaw_lock="{object_yaw}" yaw_lock_relative="true" depth_lock="{standard_depth}" yaw_tolerance="1"/>

      <!-- Align Sidemove -->
      <ReactiveFallback>
        <Sequence>
          <UpdateDetectedObjects topic_name="{vision_topic_name}" objects="{detected_objects}" timeout_sec="10.0" />
          <ComputeGoal vision_objects="{detected_objects}" target_identity="{vision_target}" main_target="{vision_main_target}" goal="{hole_goal}" absolute_depth="{hole_depth}" absolute_yaw="{hole_yaw}" />
          <SetObjectGoal vision_objects="{detected_objects}" target_identity="{vision_main_target}" goal="{buoy_goal}" absolute_depth="{object_depth}" absolute_yaw="{object_yaw}" />
        </Sequence>
        <SubTree ID="SideSweepTree" node="node" server_name="server_name" original_yaw="{object_yaw}" depth="standard_depth" />
      </ReactiveFallback>

      <UpdatePose topic_name="{pose_topic_name}" result="{odom_pose}" depth="{standard_depth}"/>
      <ConvertOdomToPose odom_pose="{odom_pose}" pose="{pose}" />
      <SplitPoseComponents pose="{pose}" yaw="{current_yaw}" z="{current_depth}" />

      <!-- Align Yaw -->
      <NavigateToPose server_name="{server_name}" goal="0;0;0;0" yaw_lock="{object_yaw}" depth_lock="{current_depth}" yaw_tolerance="1"/>
      <!-- Rough align with hole -->
      <ModifyGoal original_pose="{pose}" zeroed_components="x,y" final_pose="{pose}"/>
      <ModifyGoal original_pose="{hole_goal}" modifying_pose="{pose}" final_pose="{hole_goal}"/>
      <NavigateToPose server_name="{server_name}" goal="{hole_goal}" yaw_lock="{current_yaw}" yaw_tolerance="1"/>

      <!-- Move forward until 1.5 meter away from vision_main_target -->
      <UpdatePose topic_name="{pose_topic_name}" result="{odom_pose}" depth="{standard_depth}"/>

      <ConvertOdomToPose odom_pose="{odom_pose}" pose="{pose}" />
      <SplitPoseComponents pose="{pose}" yaw="{current_yaw}" z="{current_depth}" />

      <ModifyGoal original_pose="{buoy_goal}" zeroed_components="y,z" final_pose="{buoy_goal}"/>
      <ModifyGoal original_pose="{buoy_goal}" modifying_pose="-1.5;0;0" final_pose="{buoy_goal}"/>
      <NavigateToPose server_name="{server_name}" goal="{buoy_goal}" yaw_lock="{current_yaw}" depth_lock="{current_depth}" yaw_tolerance="1"/>

      <!-- Align with hole -->
      <!-- Set to 1.5 but actually one meter because of base_link to front -->
      <SetBlackboard output_key="range" value="1;0;0"/>

      <Repeat num_cycles="1">
        <Sequence>
          <RetryUntilSuccesful num_attempts="-1">
            <Sequence>
              <UpdateDetectedObjects topic_name="{vision_topic_name}" objects="{detected_objects}" timeout_sec="10.0" />
              <ComputeGoal vision_objects="{detected_objects}" target_identity="{vision_target}" range="{range}" goal="{goal}" absolute_depth="{object_depth}" absolute_yaw="{object_yaw}" />
            </Sequence>
          </RetryUntilSuccesful>

          <!-- Actual Hole Alignment -->
          <UpdatePose topic_name="{pose_topic_name}" result="{odom_pose}" depth="{standard_depth}"/>
          <ConvertOdomToPose odom_pose="{odom_pose}" pose="{pose}" />
          <SplitPoseComponents pose="{pose}" yaw="{current_yaw}" />

          <ModifyGoal original_pose="{goal}" zeroed_components="x" final_pose="{goal}"/>
          <ModifyGoal original_pose="{pose}" zeroed_components="x,y" final_pose="{pose}" />
          <ModifyGoal original_pose="{goal}" modifying_pose="{pose}" final_pose="{goal}"/>
          <NavigateToPose server_name="{server_name}" goal="{goal}" yaw_lock="{current_yaw}" yaw_tolerance="1"/>

          <!-- Approach Hole -->
          <!-- <UpdatePose topic_name="{pose_topic_name}" result="{odom_pose}" depth="{standard_depth}"/> -->
          <!-- <ConvertOdomToPose odom_pose="{odom_pose}" pose="{pose}" /> -->
          <!-- <SplitPoseComponents pose="{pose}" z="{current_depth}" /> -->
          <!--  -->
          <!-- <ModifyGoal original_pose="{goal}" zeroed_components="x" final_pose="{goal}"/> -->
          <!-- <ModifyGoal original_pose="{goal}" modifying_pose="0.5;0;0" final_pose="{goal}"/> -->
          <!-- <NavigateToPose server_name="{server_name}" goal="{goal}" yaw_lock="{current_yaw}" yaw_tolerance="1"/> -->
          <!--  -->
          <!-- <ModifyGoal original_pose="{range}" modifying_pose="-0.5;0;0" final_pose="{range}"/> -->
        </Sequence>
      </Repeat>

      <!-- [NO TORPEDO SHOOTING] -->
      <!-- <Delay delay_msec="3000">
        <Repeat num_cycles="10">
          <ManipulatorsService service_name="/auv3/manipulators" top_torpedo="false" bottom_torpedo="true" dropper="false" grabber="false" extend_linear="false" retract_linear="false" />
        </Repeat>
      </Delay> -->

      <!-- Disable Vision -->
      <DetectorAUVService service_name="{vision_service_name}" objects="bootlegger" enable="false"/>
    </Sequence>
  </BehaviorTree>
</root>
