<?xml version="1.0"?>
<root>
  <TreeNodesModel>
    <!-- ############################### ACTION NODES ################################# -->
    <Action ID="UpdatePose">
      <input_port name="topic_name">Topic name</input_port>
      <input_port name="queue_size">Topic queue size </input_port>
      <input_port name="timeout_sec">Timeout for waiting for message publish</input_port>
      <output_port name="result">Output port to write message result to</output_port>
      <output_port name="depth">Port to write depth value to</output_port>
    </Action>

    <Action ID="ConvertOdomToPose">
      <input_port name="odom_pose">Pose as a nav_msgs::Odometry message</input_port>
      <output_port name="pose">Pose as a geometry_msgs::PoseStamped message</output_port>
    </Action>

    <Action ID="ControllerService">
      <input_port name="service_name">Name of service</input_port>
      <input_port name="enable">True to enable controls, false to disable controls</input_port>
    </Action>

    <Action ID="SetRelativeGoal">
      <input_port name="relative_goal">Relative pose goal (refer to bt conversions for specification)</input_port>
      <input_port name="pose">Current pose</input_port>
      <input_port name="global_frame">Global frame</input_port>
      <input_port name="base_frame">Base frame</input_port>
      <output_port name="global_goal">Port to set goal to</output_port>
    </Action>

    <Action ID="GetYawBetweenPoses">
      <input_port name="source_pose">Initial starting pose</input_port>
      <input_port name="target_pose">Final pose</input_port>
      <output_port name="relative_yaw">Relative yaw to turn to the target pose from the source pose</output_port>
      <output_port name="absolute yaw">Absolute yaw to turn to the target pose from the source pose</output_port>
    </Action>

    <Action ID="GetDistanceBetweenPoses">
      <input_port name="source_pose">Initial starting pose</input_port>
      <input_port name="target_pose">Final pose</input_port>
      <output_port name="relative_pose">Distance between poses in a geometry pose message (x value)</output_port>
      <output_port name="distance">Distance between poses</output_port>
    </Action>

    <Action ID="SplitPoseComponents">
      <input_port name="pose">Geometry pose</input_port>
      <output_port name="x">x value</output_port>
      <output_port name="y">y value</output_port>
      <output_port name="z">z value</output_port>
      <output_port name="yaw">yaw value</output_port>
    </Action>

    <!-- ############################### CONDITION NODES ############################## -->
    
    <Condition ID="IsGoalReached">
        <input_port name="pose">Latest robot pose</input_port>
        <input_port name="goal">Destination</input_port>
    </Condition>

    <Condition ID="IsPoseUpdated"/>
        <input_port name="pose">Latest robot pose</input_port>
    </Condition>

    <Condition ID="IsGoalUpdated"/>
        <input_port name="goal">Destination</input_port>
    </Condition>

    <Condition ID="IsDistanceTraveled">
      <input_port name="distance">Distance to check if passed</input_port>
      <input_port name="pose">Latest robot pose</input_port>
    </Condition>

    <Condition ID="IsTimeExpired">
      <input_port name="seconds">Time to check if expired</input_port>
    </Condition>

    <!-- ############################### CONTROL NODES ################################ -->

    <!-- ############################### DECORATOR NODES ############################## -->

    <Decorator ID="DynamicTimeout">
      <input_port name="sec">After a certain amount of time, halt() the child if it's still running</input_port>
      <input_port name="add_sec">Additional time carried over from previous node</input_port>
      <output_port name="extra_sec">Time left over at this node</output_port>
    </Decorator>

  </TreeNodesModel>
</root>
